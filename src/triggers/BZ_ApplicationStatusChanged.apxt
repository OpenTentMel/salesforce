trigger BZ_ApplicationStatusChanged on CampaignMember (before update) {
    System.Debug('BZ_ApplicationStatusChanged: begin trigger');

    List<CampaignMember> campaignMembersToCreateTasksFor = new List<CampaignMember>();
    for (CampaignMember cm : Trigger.new)
    {
        if (Trigger.oldMap.get(cm.Id).Application_Status__c != cm.Application_Status__c)
        {
            List<Contact> contactsToUpdate = new List<Contact>();
            List<Task> tasksToDelete = new List<Task>();

            /*if(cm.Application_Status__c == 'Started')
            {
                // Dequeue the Intro email since they started the application on their own.
                // Immediately after signing up, before we had to prod them to start.
                // They'll get a reminder in X days if they don't finish the app.
                // UPDATE: For started apps we'll still send them the email Intro because
                // we want people to have access to the link in their email to complete their app.  
                // Many people that immediately "start" but don't finish probably immediately 
                // close it and still need a way to get back easily.  
                tasksToDelete = 
                    [SELECT Id, WhoId, WhatId FROM Task
                     WHERE WhoId=:cm.ContactId AND
                     WhatId=:cm.CampaignId AND
                     Status <> 'Completed' AND
                     Subject LIKE '%Send Intro Email%'];
            }
            else*/ if(cm.Application_Status__c == 'Submitted')
            {
                Contact contact = [SELECT Id, Name, Phone, Accepts_Text__c, 
                                  Industry__c, Company__c, Sourcing_Info__c,
                                  Grad_University__c, Graduate_Year__c, Grad_Degree__c, Undergrad_University__c,
                                  Middle_Name__c, Hometown__c, Digital_Footprint_2__c, Digital_Footprint__c, 
                                  African_American__c, Asian_American__c, Latino__c, 
                                  Native_Alaskan__c, Native_American__c, Native_Hawaiian__c, 
                                  Pacific_Islander__c, White__c, Multi_Ethnic__c, Other_Race__c, 
                                  Identify_As_First_Gen__c, Identify_As_Low_Income__c, 
                                  Identify_As_Person_Of_Color__c, Pell_Grant_Recipient__c
                                  FROM Contact WHERE Id=:cm.ContactId];

                // If they immediately completed the app after signing up, even 
                // before we had to prod them to start it, then just delete the intro email task.
                tasksToDelete = 
                    [SELECT Id, WhoId, WhatId FROM Task
                     WHERE WhoId=:cm.ContactId AND
                     WhatId=:cm.CampaignId AND
                     Status <> 'Completed' AND
                     Subject LIKE '%Send Intro Email%'];
                
                campaignMembersToCreateTasksFor.add(cm);

                contact.Accepts_Text__c = cm.Accepts_Text__c;
                contact.Industry__c = cm.Industry__c;
                contact.Company__c = cm.Company__c;
                contact.Sourcing_Info__c = cm.Sourcing_Info__c;
                contact.Grad_University__c = cm.Grad_University__c;
                contact.Graduate_Year__c = cm.Graduate_Year__c;
                contact.Grad_Degree__c = cm.Grad_Degree__c;
                contact.Undergrad_University__c = cm.Undergrad_University__c;
                contact.Middle_Name__c = cm.Middle_Name__c;
                contact.Hometown__c = cm.Hometown__c;
                contact.Digital_Footprint_2__c = cm.Digital_Footprint_2__c;
                contact.Digital_Footprint__c = cm.Digital_Footprint__c;
                contact.African_American__c = cm.African_American__c;
                contact.Asian_American__c = cm.Asian_American__c;
                contact.Latino__c = cm.Latino__c;
                contact.Native_Alaskan__c = cm.Native_Alaskan__c;
                contact.Native_American__c = cm.Native_American__c;
                contact.Native_Hawaiian__c = cm.Native_Hawaiian__c;
                contact.Pacific_Islander__c = cm.Pacific_Islander__c;
                contact.White__c = cm.White__c;
                contact.Multi_Ethnic__c = cm.Multi_Ethnic__c;
                contact.Other_Race__c = cm.Other_Race__c;
                contact.Identify_As_First_Gen__c = cm.Identify_As_First_Gen__c;
                contact.Identify_As_Low_Income__c = cm.Identify_As_Low_Income__c;
                contact.Identify_As_Person_Of_Color__c = cm.Identify_As_Person_Of_Color__c;
                contact.Pell_Grant_Recipient__c = cm.Pell_Grant_Recipient__c;

                contactsToUpdate.add(contact);
            }
            update contactsToUpdate;
            delete tasksToDelete;
        }
    }
    
    if (campaignMembersToCreateTasksFor.size() > 0)
    {
        insert BZ_TaskFactory.createTasks(campaignMembersToCreateTasksFor, 
                                          'Review submitted application for {0}',
                                          'Review the application for \"{0}\" by clicking the Campaign in the Releated To field, then scrolling down to the Campaign Member section, then clicking their first or last name to open the Campaign Member page, and finally changing their Candidate Status to Accepted, Interview Requested, Waitlisted, or Rejected.');
    }
}
