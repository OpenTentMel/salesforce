trigger BZ_CandidateStatusChanged on CampaignMember (before update) {
    System.Debug('BZ_CandidateStatusChanged: begin trigger');
    
    Set<Id> contactIds = new Set<Id>();
    Set<Id> campaignIds = new Set<Id>();
    for (CampaignMember cm : Trigger.new)
    {        
        //System.Debug('BZ_CandidateStatusChanged: adding ContactId='+cm.ContactId + ' to contactIds ' + contactIds);
        contactIds.add(cm.ContactId);
        //System.Debug('BZ_CandidateStatusChanged: adding CampaignId='+cm.CampaignId + ' to campaignIds ' + campaignIds);
        campaignIds.add(cm.CampaignId);
    }
    Map<Id, Contact> contactMap = new Map<Id, Contact>([SELECT Id, Volunteer_Information__c, Participant_Information__c, User_Type__c FROM Contact WHERE Id in :contactIds]);
    Map<Id, Campaign> campaignMap = new Map<Id, Campaign>([SELECT Id, Type, Request_Student_Id__c FROM Campaign WHERE Id in :campaignIds]);
    //System.Debug('BZ_CandidateStatusChanged: contactMap='+contactMap);
    //System.Debug('BZ_CandidateStatusChanged: campaignMap='+campaignMap);
    
    List<CampaignMember> campaignMembersToCreateInterviewTasksFor = new List<CampaignMember>();

    // We no longer use these for SJSU.  Keeping the code around for now in case we
    // change our minds.
    //List<CampaignMember> campaignMembersToCreateRegistrationCodeTasksFor = new List<CampaignMember>();
    
    for (CampaignMember cm : Trigger.new)
    {
        if (Trigger.oldMap.get(cm.Id).Candidate_Status__c != cm.Candidate_Status__c)
        {
            List<Task> tasksToUpdate = new List<Task>();
            List<Contact> contactsToUpdate = new List<Contact>();
            
            boolean closeReviewAppTask = false;
            
            // If the candidate status is changed to Interview Requested, 
            // queue up a task with the Email Template To Send set to notify 
            // the user that we are requesting an interview with them.
            //System.debug('BZ_CandidateStatusChanged: cm.Candidate_Status__c=' + cm.Candidate_Status__c);
            if (cm.Candidate_Status__c == 'Interview Requested')
            {
                closeReviewAppTask = true;
                campaignMembersToCreateInterviewTasksFor.add(cm);
            }
            else if(cm.Candidate_Status__c == 'Accepted')
            {   
                closeReviewAppTask = true;
                
                Campaign campaign = campaignMap.get(cm.CampaignId);
                //System.debug('BZ_CandidateStatusChanged: campaign='+campaign);
        
                /*if (campaign.Type == 'Program Participants'&& campaign.Request_Student_Id__c == true){
                    
                    // Queue up task to set the Student Registration Code if this is a Campaign for 
                    // colleges where the student has to register the course in the college's 
                    // registration system.
                    campaignMembersToCreateRegistrationCodeTasksFor.add(cm);
                }*/
            } 
            else if(cm.Candidate_Status__c == 'Not Accepted' || cm.Candidate_Status__c == 'Waitlisted')
            {
                closeReviewAppTask = true;
            }
            else if (cm.Candidate_Status__c == 'Confirmed') {
                Campaign campaign = campaignMap.get(cm.CampaignId);
                //System.debug('BZ_CandidateStatusChanged: campaign='+campaign);
                Contact contact = contactMap.get(cm.ContactId);
                //System.debug('BZ_CandidateStatusChanged: contact='+contact); 
        
                if (campaign.Type == 'Leadership Coaches') {
                    contact.Volunteer_Information__c = 'Current LC';
                    contactsToUpdate.add(contact);
                } else if (campaign.Type == 'Program Participants'){
                    contact.Participant_Information__c = 'Participant';
                    contactsToUpdate.add(contact);
                } else if (campaign.Type == 'Volunteer'){
                    contact.Volunteer_Information__c = 'Temp Volunteer';
                    contactsToUpdate.add(contact);
                }
            }
            else if (cm.Candidate_Status__c == 'Opted Out') {
                Campaign campaign = campaignMap.get(cm.CampaignId);
                //System.debug('BZ_CandidateStatusChanged: campaign='+campaign);
                Contact contact = contactMap.get(cm.ContactId);
                //System.debug('BZ_CandidateStatusChanged: contact='+contact); 
        
                // They may have been Confirmed, but later Opted Out (e.g. Dropped)
                // So we set them back to being in the pipeline
                if (campaign.Type == 'Leadership Coaches') {
                    contact.Volunteer_Information__c = 'LC Pipeline';
                    contactsToUpdate.add(contact);
                } else if (campaign.Type == 'Program Participants'){
                    contact.Participant_Information__c = 'Participant Pipeline';
                    contactsToUpdate.add(contact);
                }
            } 
            
            if (closeReviewAppTask)
            {
                System.debug('BZ_CandidateStatusChanged: closing task to Review App');
                List<Task> reviewAppTasks = [SELECT Id, Status FROM Task 
                                             WHERE WhoId=:cm.ContactId AND 
                                                   WhatId=:cm.CampaignId AND
                                                   Status != 'Completed' AND
                                                   Subject LIKE '%Review submitted application for%'];
                if (reviewAppTasks != null && reviewAppTasks.size() > 0)
                {
                    Task reviewAppTask = reviewAppTasks.get(0);
                    System.debug('BZ_CampaignAssigned: reviewAppTask = ' + reviewAppTask);
                    reviewAppTask.Status = 'Completed';
                    tasksToUpdate.add(reviewAppTask);
                }
            }
            
            update contactsToUpdate;
            update tasksToUpdate;
        }
    }
    
    if (campaignMembersToCreateInterviewTasksFor.size() > 0)
    {
        insert BZ_TaskFactory.createEmailTasks(campaignMembersToCreateInterviewTasksFor, 
                                               'Send Interview Request Email', 
                                               'App_Interview_Requested_Email_Template__c');
    }
    
    /*if (campaignMembersToCreateRegistrationCodeTasksFor.size() > 0)
    {
        insert BZ_TaskFactory.createTasks(campaignMembersToCreateRegistrationCodeTasksFor, 
                                          'Set Student Registration Code for {0}',
                                          'Retrieve a \"Student Registration Code\" for \"{0}\" by getting a code from the college registrar, then clicking the \"Campaign Member\" link below in the \"Sign Up And Application Info\" section, and populating the field with the code.  Dont forget to Save!');
    }*/
}
