@isTest 
private class BZ_ApplicationStatusChanged_TEST {
  static testMethod void validateInterviewRequested() {
        Contact campaignOwner = new Contact(FirstName='Test', LastName='CampaignOwner_asc1', OwnerId=userInfo.getUserId());
        insert campaignOwner;
        Contact contact = new Contact(FirstName='Test', LastName='AppStatChanged1');
        insert contact;
        
        // Note: the Campaign.OwnerId refers to the User, so we need to use campaignOwner.OwnerId instead of Id.  See the child relationship of the User object.
        String emailTemplateName = 'Test Interview Requested Email';
        String emailTemplateDeveloperName = 'Test_Interview_Requested_Email';
        Campaign campaign = new Campaign(Name='Test Prospective Students Campaign', OwnerId=campaignOwner.OwnerId, 
                                         App_Interview_Requested_Email_Template__c=emailTemplateName,
                                         Intro_Email_Template__c='blah');
        insert campaign;
        
        CampaignMember cm = new CampaignMember();
        cm.CampaignId=campaign.Id;
        cm.ContactId=contact.Id;
       
        insert cm;
        
        // This fires the trigger we're testing.
        cm.Application_Status__c = 'Interview Requested';
        update cm;
    
        List<Task> resultingTasks = [SELECT Id, WhoId, WhatId FROM Task
                                    WHERE WhoId=:cm.ContactId AND 
                                          WhatId=:cm.CampaignId AND
                                          Subject LIKE '%Send Interview Request Email%'];
        System.assert(resultingTasks.size()==1, 'Expected Task to be created to Map the cohort');
    }
    
    static testMethod void validateAccepted() {
        Contact campaignOwner = new Contact(FirstName='Test', LastName='CampaignOwner_aqmct1', OwnerId=userInfo.getUserId());
        insert campaignOwner;
        Contact contact = new Contact(FirstName='Test', LastName='AppStatChangedToAccepted1');
        insert contact;
        
        // Note: the Campaign.OwnerId refers to the User, so we need to use campaignOwner.OwnerId instead of Id.  See the child relationship of the User object.
        Campaign campaign = new Campaign(Name='Test Prospective Students Campaign', OwnerId=campaignOwner.OwnerId,
                                        Type='Leadership Coaches', Intro_Email_Template__c='blah');
        insert campaign;
        
        CampaignMember cm = new CampaignMember();
        cm.CampaignId=campaign.Id;
        cm.ContactId=contact.Id;
       
        insert cm;
        
        // This fires the trigger we're testing.
        cm.Application_Status__c = 'Accepted';
        update cm;
    
        List<Task> resultingTasks = [SELECT Id, WhoId, WhatId FROM Task
                                    WHERE WhoId=:cm.ContactId AND 
                                          WhatId=:cm.CampaignId AND
                                          Subject LIKE '%Map cohort%'];
        System.assert(resultingTasks.size()==1, 'Expected Task to be created to Map the cohort');
        
        Contact updatedContact = [SELECT Id, Volunteer_Information__c FROM Contact WHERE Id=:cm.ContactId];
        System.assert(updatedContact.Volunteer_Information__c == 'Current LC', 'When a Contact is Accepted, their Volunteer Information should be set.');
    }
}
