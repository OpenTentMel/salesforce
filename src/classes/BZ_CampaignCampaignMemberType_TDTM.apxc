/* We run this trigger inside of a TDTM wrapper so that we can control its load order and its active state from the NPSP Trigger Handler UI
The point is to control the record type assignment of a Campaign's Campaign Members based upon the 'Type' field to make it easier for users 
and so that they don't have to think about it. */
global without sharing class BZ_CampaignCampaignMemberType_TDTM extends npsp.TDTM_Runnable{
  
 // the main entry point for TDTM to invoke our trigger handlers.
  global override npsp.TDTM_Runnable.DmlWrapper run(List<SObject> newlist, List<SObject> oldlist, npsp.TDTM_Runnable.Action triggerAction, Schema.DescribeSObjectResult objResult) {
  
        npsp.TDTM_Runnable.DmlWrapper dmlWrapper = null;
      dmlWrapper = new npsp.TDTM_Runnable.DmlWrapper();
        List<Campaign> newCampaignList = (List<Campaign>)newlist; 
        List<Campaign> oldCampaignList= (List<Campaign>)oldList;
      
      //create Map of Record Type names and their ids
      List<RecordType> rts=[Select id, name from RecordType where SobjectType='CampaignMember' AND isActive=true];
      Map<String,Id> rtNameToIdMap= new Map<String,Id>();
      for(RecordType rt: rts) rtNameToIdMap.put(rt.name, rt.Id);
      
      //before Insert
      if (triggerAction == npsp.TDTM_Runnable.Action.BeforeInsert) {
             for(Campaign c: newCampaignList){
                 reassignCampaignMemberRecordTypeId(c, rtNameToIDMap);
            } 
       //before Update
      }else if(triggerAction == npsp.TDTM_Runnable.Action.BeforeUpdate){
          for (Integer x = 0; x < newCampaignList.size(); x++) {
       //evaluate if the Type field has changed
              if (newCampaignList[x].Type <> oldCampaignList[x].Type) {
                reassignCampaignMemberRecordTypeId(newCampaignList[x], rtNameToIDMap);
                
            }
          }
      }
      return dmlWrapper;
  }
    private static void reassignCampaignMemberRecordTypeId(Campaign c, Map<String,Id> rtNameToIdMap){
         switch on c.Type{
                    when 'Mentor', 'Leadership Coaches'{
                        c.CampaignMemberRecordTypeId=rtNameToIdMap.get('Mentor');
                    }when 'Mentee','Program Participants', 'Pre-Accelerator Participants'{
                        c.CampaignMemberRecordTypeId=rtNameToIdMap.get('Mentee');
                    }when 'Donor', 'Appeal', 'Email'{
                        c.CampaignMemberRecordTypeId=rtNameToIdMap.get('Donor');
                    }when 'Volunteer'{
                        c.CampaignMemberRecordTypeId=rtNameToIdMap.get('Volunteer');
                    }when 'Partners'{
                        c.CampaignMemberRecordTypeId=rtNameToIdMap.get('Partner');
                    }when else{
                        c.CampaignMemberRecordTypeId=rtNameToIdMap.get('Master');
                    }
                }
    }
}