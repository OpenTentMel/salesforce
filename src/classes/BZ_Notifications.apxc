/**
 * Handles notifying the beyondz.org platform of Salesforce related actions.
 */
global class BZ_Notifications {
    
    public static Boolean disableNotifyApplyNow {get;set;}
    static {
        disableNotifyApplyNow = false;
    }
    
    /**
     * The lists are a comma-separated set of object Ids which should be set 
     */
    public static void notifyApplyNow(String yesList, String noList) { 
        if (disableNotifyApplyNow) {
            System.debug('BZ_Notifications: notifyApplyNow is disabled -- NOOP.');
            return;
        }
        else {
            System.debug('BZ_Notifications: notifyApplyNow is enabled.');
        }
        if(Test.isRunningTest()) return;
        
        notifyApplyNowImpl(yesList, noList);
    } 
    
    @future (callout=true) 
    private static void notifyApplyNowImpl(String yesList, String noList) { 
        BZ_Settings__c settings = BZ_Settings__c.getInstance('bz'); 
        String base_url = settings.base_url__c; 
        String magic_token = settings.magic_token__c; 
        Http http = new Http(); 
        HttpRequest request = new HttpRequest(); 
        request.setEndpoint(base_url + '/salesforce/change_apply_now?magic_token='+magic_token+'&yes_list=' + yesList + '&no_list=' + noList); 
        request.setMethod('GET'); 
        HttpResponse response = http.send(request); 
        response.getBody(); 
    }
    
    /**
     * The format of changes is old:new,old:new,etc. 
     */
    @future (callout=true) 
    public static void recordConvertedLeads(String changes) { 
        BZ_Settings__c settings = BZ_Settings__c.getInstance('bz'); 
        if(Test.isRunningTest()) return;
        String base_url = settings.base_url__c; 
        String magic_token = settings.magic_token__c; 
        Http http = new Http(); 
        HttpRequest request = new HttpRequest(); 
        request.setEndpoint(base_url + '/salesforce/record_converted_leads?magic_token='+magic_token+'&changes=' + changes); 
        request.setMethod('GET'); 
        HttpResponse response = http.send(request); 
        response.getBody(); 
    } 
    
    /**
     * Notifies the beyondz.org platform that a CampaignMember is being
     * changed.  E.g. copied or moved to a new Campaign.  
     * 
     * For Copy, this means that the user should
     * be put in a state where they can login and submit or re-submit the application
     * for the new campaign and then continue the rest of the acceptance and confirmation
     * flow.
     * 
     * For Move, this means that the user should pick up where they left off from the previous campaign
     * 
     * valid values for operation: "move", "copy"
     */
    @future (callout=true) 
    public static void changeCampaigns(List<Id> contactIds, Id oldCampaignId, Id newCampaignId) {
        BZ_Settings__c settings = BZ_Settings__c.getInstance('bz'); 
        if(Test.isRunningTest()) return;
        if (contactIds.isEmpty()){
            System.Debug('BZ_Notifications.changeCampaigns(): contactIds is empty.  NOOP.');
            return;
        }

        String base_url = settings.base_url__c; 
        String magic_token = settings.magic_token__c; 
        Http http = new Http(); 
        HttpRequest request = new HttpRequest();
        String contactIdsString = '';
        for (Id i : contactIds){
            contactIdsString += ',' + i;
        }
        contactIdsString = contactIdsString.substring(1);
        System.Debug('BZ_Notifications.changeCampaigns(): calling change_campaigns with contactIds = ' + contactIdsString);
        request.setEndpoint(base_url + '/salesforce/change_campaigns?magic_token='+magic_token+'&contactIds=' + contactIdsString +'&oldCampaignId=' + oldCampaignId + '&newCampaignId=' + newCampaignId); 
        request.setMethod('GET'); 
        HttpResponse response = http.send(request); 
        String responseBody = response.getBody();
        if (response.getStatusCode() != 200)
        {
            throw new BZ_NotificationException('BZ_Notifications: changeCampaigns() failed for call to ' + request.getEndpoint() + '\n response: ' + responseBody);
        }
    }
    
    /**
     * Notifies the beyondz.org platform to pull all Confirmed CampaignMembers
     * for the specified Campaign and to update our Learning
     * Management System enrollments based on their 
     * Student and Leadership Coach relationships.
     */
    @future (callout=true) 
    public static void syncToLMS(Id campaignId) {
        BZ_Settings__c settings = BZ_Settings__c.getInstance('bz'); 
                if(Test.isRunningTest()) return;
        String base_url = settings.base_url__c; 
        String magic_token = settings.magic_token__c; 
        Http http = new Http(); 
        HttpRequest request = new HttpRequest(); 
        request.setEndpoint(base_url + '/salesforce/sync_to_lms?magic_token='+magic_token+'&campaignId=' + campaignId); 
        request.setMethod('GET'); 
        HttpResponse response = http.send(request); 
        response.getBody(); 
    }
    
    public class BZ_NotificationException extends Exception {}
}
