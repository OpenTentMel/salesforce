/**
 * Custom Controller that responds to the "Send Queued Application Decisions" button
 * and sends an email to each CampaignMember with their Application Status set to
 * “Waitlisted”, “Accepted”, or “Not Accepted”.  The email template is pulled from the
 * corresponding Campaign field.
 */
public class BZ_SendQueuedApplicationDecisions {
    private Campaign m_campaign;
    private String m_resultMessage;
    private boolean m_hasRun;
    private Map<String, List<CampaignMember>> m_emailTemplateToRecipients;
    private String m_applicationDecisionsToSendDisplayList;
    
    public BZ_SendQueuedApplicationDecisions(ApexPages.StandardController controller){
        // The addFields call is becuase these fields are required by the functionality 
        // but are not referenced in the markeup, so they are not queried causing this error: 
        // FATAL_ERROR System.SObjectException: SObject row was retrieved via SOQL without querying the requested field
        controller.addFields(new String[]{'App_Waitlisted_Email_Template__c','App_Accepted_Email_Template__c','App_Not_Accepted_Email_Template__c', 'Request_Student_Id__c'});
        m_campaign = (Campaign)controller.getRecord();
        m_hasRun = false;
        m_resultMessage = '';
        
        m_emailTemplateToRecipients = BZ_BulkEmailer.getQueuedApplicationDecisions(m_campaign);
        if (m_emailTemplateToRecipients.size() > 0)
        {
            m_applicationDecisionsToSendDisplayList = '<table><tr><td width="200px"><strong>Name</strong></td><td><strong>EmailTemplate</strong></td></tr>';
            for (String emailTemplate : m_emailTemplateToRecipients.keySet())
            {
                for (CampaignMember cm : m_emailTemplateToRecipients.get(emailTemplate))
                {
                    m_applicationDecisionsToSendDisplayList += '<tr><td>' + cm.Contact.Name + '</td><td>' + emailTemplate + '</td></tr><br/>';
                }
            }
            m_applicationDecisionsToSendDisplayList += '</table>';
        }
        else
        {
            m_resultMessage = 'There are no queued application decisions to send.  Application decisions are only sent for Campaign Members marked as Accepted, Waitlisted, or Not Accepted.';
            m_hasRun = true;
        }
    }
    
    public String getApplicationDecisionsToSendDisplayList(){
        return m_applicationDecisionsToSendDisplayList;
    }
    
    public String getResultMessage(){
        return m_resultMessage;
    }
    
    public boolean getHasRun(){
        return m_hasRun;
    }
    
    public void run(){
        Id senderId = UserInfo.getUserId();
        User sender = [SELECT Id from User Where Id = :senderId];
        Integer emailsSent = BZ_BulkEmailer.sendQueuedApplicationDecisions(m_emailTemplateToRecipients);
        if (emailsSent > 0){
            m_resultMessage = emailsSent + ' Application Decisions sent!  Look under the Activity History section to see what was sent.';
        }
        else {
            // If no application decisions exist, the option shouldn't be shown in the UI in the first place.
            m_resultMessage = 'Failed to send application decisions.  Contact your administrator';
        }
        m_hasRun = true;
    }
}
